name: Tests
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  ruff:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - run: pip install -e '.[dev]'
      - run: ruff check .
  mypy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - run: pip install -e '.[dev]'
      - run: mypy .
  ruff-format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - run: pip install -e '.[dev]'
      - run: ruff format --check .
  pytest:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libegl1 libgl1-mesa-dev libxrender1 libxkbcommon-x11-0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Set environment variable for ovito
        run: echo "OVITO_GUI_MODE=0" >> $GITHUB_ENV

      - run: pip install -e '.[dev]'

      - name: Verify ovito installation
        run: |
          python -c "import ovito; print('ovito version:', ovito.__version__)"

      - run: pytest --cov=src --cov-report term-missing
  doctest:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - run: pip install -e '.[dev]'
      - run: make -C docs doctest

